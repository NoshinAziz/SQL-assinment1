1. Write a query to get all data of the actor.
Query: dvdrental=# select * from actor;

2. Write a query to get the email and last name of the customer.
Query: dvdrental=# select last_name, email from the customer;

3. Write a query to get the title, description, and release year of the film.
Query: dvdrental=# select title, description, release_year from file;

4. Query city and country id in the city table.
Query: dvdrental=# select city_id, country_id from city;

 5. Write a query to get the amount, payment date, and customer id from the customer table.
Query: dvdrental=# select amount, payment date, and customer id from the customer table.

 6. Write a query to get all data of language.
Query: dvdrental=# select * from language;
language_id |         name         |     last_update     
-------------+----------------------+---------------------
           1 | English              | 2006-02-15 10:02:19
           2 | Italian              | 2006-02-15 10:02:19
           3 | Japanese             | 2006-02-15 10:02:19
           4 | Mandarin             | 2006-02-15 10:02:19
           5 | French               | 2006-02-15 10:02:19
           6 | German               | 2006-02-15 10:02:19
(6 rows)

 7. Query all columns for payment in the payment table with customer id 10.
Query: dvdrental=# select payment from payment where customer_id=10;
 (18532,10,1,1801,4.99,"2007-02-16 18:50:19.996577")
 (18533,10,1,1995,4.99,"2007-02-17 09:39:40.996577")
 (18534,10,2,2222,3.99,"2007-02-18 01:54:49.996577")
 (18535,10,1,2814,0.99,"2007-02-19 18:30:25.996577")
 (18536,10,1,2865,0.99,"2007-02-19 22:29:21.996577")
 (22773,10,2,10671,8.99,"2007-03-01 15:38:25.996577")
 (22774,10,2,11289,2.99,"2007-03-02 13:23:26.996577")
 (22775,10,1,11405,0.99,"2007-03-02 17:42:05.996577")
 (22776,10,2,12031,2.99,"2007-03-17 18:40:01.996577")
 (22777,10,2,12400,2.99,"2007-03-18 07:47:38.996577")
 (22778,10,2,13316,4.99,"2007-03-19 17:51:56.996577")
 (22779,10,2,13917,2.99,"2007-03-20 15:11:54.996577")
 (22780,10,1,15370,5.99,"2007-03-22 20:27:55.996577")
 (29094,10,2,3790,3.99,"2007-04-06 12:42:11.996577")
 (29095,10,2,4042,4.99,"2007-04-07 01:35:06.996577")
 (29096,10,1,4255,1.99,"2007-04-07 12:42:39.996577")
 (29097,10,1,5038,7.99,"2007-04-09 01:41:18.996577")
 (29098,10,2,5068,2.99,"2007-04-09 03:21:44.996577")
 (29099,10,1,5444,0.99,"2007-04-09 20:27:23.996577")
 (29100,10,1,5905,2.99,"2007-04-10 19:09:35.996577")
 (29101,10,1,7738,2.99,"2007-04-28 03:50:08.996577")
 (29102,10,2,8001,6.99,"2007-04-28 13:39:21.996577")
 (29103,10,2,8188,4.99,"2007-04-28 21:02:38.996577")
 (29104,10,1,9935,4.99,"2007-04-30 13:55:33.996577")
(24 rows)

    8. Query last name and first name of customers in customer table whose first names are "Mary"
​​Query: dvdrental=# select last_name, first_name from customer where first_name=’mary’

 last_name | first_name 
-----------+------------
 Smith     | Mary
(1 row)

    9. Query last name and first name of customers in customer table whose first names are "Mary" and last names are "Smith".
Query: dvdrental=# select last_name, first_name FROM customer WHERE first_name='Mary' AND last_name='Smith';
 last_name | first_name 
-----------+------------
 Smith     | Mary
(1 row)

    10. Query last name and first name of customers in the customer table whose first names are "Susan" or last names are "Jones".
dvdrental=# select last_name, first_name FROM customer WHERE first_name='Susan' AND last_name='Jones';
 last_name | first_name 
-----------+------------
(0 rows)

 11. Query email of customers in customer table whose first name is "Mar", "Mary" or "Mari".
dvdrental=# select distinct email FROM customer WHERE first_name = 'Mar' or first_name- ='Mary' or first_name='Mari';
             email             
-------------------------------
 mary.smith@sakilacustomer.org
(1 row)



    12. Query last name and first name of customers in customer table whose first names start with "Ma".
dvdrental=# select last_name, first_name FROM customer WHERE first_name like 'Ma%';
 last_name | first_name 
-----------+------------
 Smith     | Mary
 Miller    | Maria
 Moore     | Margaret
 Gonzalez  | Martha
 Turner    | Marie
 Ross      | Marilyn
 Tucker    | Marjorie
 Snyder    | Marion
 Little    | Maureen
 Dean      | Marcia
 Welch     | Marlene
 Mendoza   | Marian
 Hoffman   | Mattie
 Silva     | Maxine
 Holland   | Mabel
 Douglas   | Marsha
 Wade      | Margie
 Fletcher  | Mae
 Rinehart  | Mark
 Mahan     | Matthew
 Bales     | Martin
 Murrell   | Manuel
 Yee       | Marvin
 Cheatham  | Mario
 Hidalgo   | Marcus
 Crawley   | Maurice
 Outlaw    | Marc
 Bolin     | Mathew
 Pitt      | Max
 Thorn     | Marshall
 Ocampo    | Marion
(31 rows)

dvdrental=# select last_name, first_name FROM customer WHERE first_name like 'MA%';
 last_name | first_name 
-----------+------------
(0 rows)

    13. Write a query to get staff id, first name and username of staff in staff table whose staff id is 10.
dvdrental=# select staff_id, first_name, username FROM staff WHERE staff_id=10;
 staff_id | first_name | username 
----------+------------+----------
(0 rows)



    14. Query last name and first name of customers in customer table whose first name start with letter "M" and contains 3 to 5 characters.

Select last_name, first_name from customer where first_name like ‘M%’ and length(first_name) >=3 and length(first_name) <=5;
Worked: Display 12 rows.

    15. Query last name and first name of customers in customer table whose first names start with "Bra" and last names are not "Motley".

dvdrental=# select last_name, first_name from customer where first_name like 'Bra%' and last_name not like 'Motley';
 last_name | first_name 
-----------+------------
 Graves    | Brandy
 Huey      | Brandon
 Mccurdy   | Brad
(3 rows)


    16. Query store id of stores that have more than 300 customers in customer table.
dvdrental=# select store_id from customer group by store_id having count(customer) >300;
 store_id 
----------
        1
(1 row)

    17. Write a query to select all details of the only customers who have been spending more than 200 in the customer table.
dvdrental=# select * from payment group by payment.payment_id having sum(amount) >200;
 payment_id | customer_id | staff_id | rental_id | amount | payment_date 
------------+-------------+----------+-----------+--------+--------------
(0 rows)


    18. Query all columns in film table where the film_id is less than 4.
dvdrental=# select * from film where film_id <4;
Displayed 3 rows.

    19. Write a query to get all data from address table.
dvdrental=# select * from address;
Displayed 603 rows;

    20. Query rental date, customer id and rental id in rental table when rental date is 2005-05-25.
select rental_date, customer_id, rental_id from rental
where rental_date between '2005-05-25 00:00:00' and '2005-05-25 24:00:00';


    21. Query all columns for customers in customer table with store id 2 or customer id 7.
select * from customer
where store_id='2' or customer_id='7';
Displayed: 274 rows (Successfully run. Total query runtime: 84 msec.
274 rows affected).

 22. Query all columns for customers in customer table who have spent amount more than $200.
select customer_id from payment group by customer_id having SUM(amount) >200;
Successfully run. Total query runtime: 75 msec.
2 rows affected.

    23. Query amount and payment_date from payment where the amount paid was less than $2.
select amount, payment_date from payment where amount <2;
Successfully run. Total query runtime: 70 msec.
3325 rows affected.

    24. Write a query to get a list of actors with the first name Chris, Cameron, or Cuba.
select distinct * from actor where first_name= 'chris' or first_name= 'cameron' or first_name= 'Cuba';
Successfully run. Total query runtime: 265 msec.
3 rows affected.

    25. Query last name of customers in customer table whose first names are "John".
select last_name from customer where first_name= 'John';
Successfully run. Total query runtime: 68 msec.
1 rows affected.

    26. Write a query to get staff id, first name and username of staff in staff table whose store id is less than 6.



    27. Write a query to get release year, rental duration and rental rate of films in film table.
select release_year, rental_duration, rental_rate from film;
Successfully run. Total query runtime: 632 msec.
1000 rows affected.


    28. Write a query to get city id and country id of country in country table whose name is "New York".


    29. Write a query to get all data of city table.
select * from city;
Successfully run. Total query runtime: 186 msec.
600 rows affected.

    30. Write a query to get film id of film in film_category table with category_id 2.
select film_id from film_category where category_id= 2;
Successfully run. Total query runtime: 188 msec.
66 rows affected.


Assignment 3:


5.3.1: What are all the records in the store table, ordered by the primary key of the table?
select * from store order by store_id
Successfully run. Total query runtime: 489 msec.
2 rows affected.

5.3.2: What are the first 10 records in the inventory table in ascending order of update (show just the primary key and the update timestamp)?
select inventory_id, last_update from inventory order by last_update ASC limit 10;
Successfully run. Total query runtime: 106 msec.
10 rows affected.
5.3.3: What is the street address, district, city name, and phone number for all addresses in the 18743 postal code?
select d.address as "street address",d.district,y.city,d.phone
from address as d
inner join city as y on y.city_id=d.city_id
where d.postal_code='18743';
Successfully run. Total query runtime: 106 msec.
1 rows affected.
5.3.4: How many records are in the inventory table?
select COUNT(*) FROM INVENTORY;
Successfully run. Total query runtime: 165 msec.
1 rows affected.
5.3.5: What is the timestamp of the most recent update to the staff table?
select last_update from staff order by last_update desc limit 1;
Successfully run. Total query runtime: 186 msec.
1 rows affected.
5.3.6: How many distinct values of country_id exist in the city table?
select distinct count(country_id)from city;
Successfully run. Total query runtime: 119 msec.
1 rows affected.

5.3.7: How many actors' last names begin with either a "B" or a "C"?
​​select count(last_name)from actor where last_name like 'B%' or last_name like 'C%';
Successfully run. Total query runtime: 82 msec.
1 rows affected.

5.3.8: What is the average payment amount (rounded to the nearest cent) and number of payments made in the month of April, 2007,
by customers that are currently active, and whose average payment is at least $5.00?
select p.customer_id,
ROUND(avg(p.amount),2) as
"average payment amount",
count(*) as "number of payments made"
from payment as p 
inner join customer as c on 
c.customer_id=p.customer_id
where cast(p.payment_date as DATE)
between '2007-04-01' and '2007-04-30'
and c.active=1
group by p.customer_id
having avg(p.amount) >=5.00;
Successfully run. Total query runtime: 126 msec.
79 rows affected.


5.3.9: Show customer's first and last name and email, and label the average payment field as "Avg. Payment Amount"
and the number of payments field as "Number of Payments".
select p.customer_id,
c.first_name,
c.last_name,
c.email,
avg(p.amount) as "avg.payment amount",
count(*) as "Number of payments"
from customer as c 
inner join payment as p on p.customer_id=c.customer_id
group by p.customer_id, c.first_name,
c.last_name, c.email;
Successfully run. Total query runtime: 207 msec.
599 rows affected.
5.3.10: Order the results by highest payment first, and then by last name.
select p.customer_id,
c.first_name,
c.last_name,
c.email,
ROUND(avg(p.amount),2) as "Avg.payment Amount",
 sum(p.amount) as "Total payment amount",
count(*) as "Number of payments"
FROM customer As c
inner join payment as p on
p.customer_id=c.customer_id
group by p.customer_id, c.first_name,
c.last_name, c.email
order by "Total payment amount"
desc;
Successfully run. Total query runtime: 140 msec.
599 rows affected.
5.3.11: What are all the first names of both the actors and the staff members that begin with the letter 'S' (in alphabetical order)?
select first_name from actor
where first_name like 'S%'
union all
select first_name from staff
where first_name like 's%'
order by first_name;
Successfully run. Total query runtime: 117 msec.
14 rows affected.

5.3.12: Show the title of the films that Jon rented on May 29, 2005 in common with those that Mike rented on June 20, 2005. Order by film title.
